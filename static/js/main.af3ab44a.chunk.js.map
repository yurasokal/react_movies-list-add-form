{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","this","onSubmit","preventDefault","props","onAdd","type","placeholder","onChange","required","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af3ab44a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    } = this.state;\n\n    return (\n      <div>\n        <form\n          className=\"form\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            this.props.onAdd({\n              title,\n              description,\n              imgUrl,\n              imdbUrl,\n              imdbId,\n            });\n            this.setState({\n              title: '',\n              description: '',\n              imgUrl: '',\n              imdbUrl: '',\n              imdbId: '',\n            });\n          }}\n        >\n          <h2 className=\"head\"><strong>Add movies to list here</strong></h2>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            className=\"form__input\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            required\n          />\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            className=\"form__input form__textarea\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"ImgUrl\"\n            className=\"form__input\"\n            value={this.state.imgUrl}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"ImdbUrl\"\n            className=\"form__input\"\n            value={this.state.imdbUrl}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"ImdbId\"\n            className=\"form__input\"\n            value={this.state.imdbId}\n            onChange={this.handleChange}\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"button\"\n          >\n            <strong>Add movie</strong>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}